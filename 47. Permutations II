class Solution:
    def permuteUnique(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        res = []
        n = len(nums)
        self.helper(nums, [False]*n, [],res )
        return res
    
    def helper(self, nums, used, curr, result):
        if len(curr) == len(nums):
            result.append(curr[:])
            return
        
        for i in range(len(nums)):
            if used[i]:
                continue
            if i>0 and nums[i]== nums[i-1] and used[i-1]== False:
                continue
            used[i] = True
            curr.append(nums[i])
            self.helper(nums, used, curr, result)
            curr.pop(-1)
            used[i] = False

